name: pipeline release

on:
  release:
    types:
      - created

jobs:
  
  verify:
    name: verify version is not already pushed
    runs-on : ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.release_tag }}
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Deduce release
      id: vars
      run: echo ::set-output name=release_tag::$(grep version setup.py | cut -d "\"" -f2)
    - name: Test pypi release
      run: |
        curl -iL https://pypi.org/project/pyvitemadose/${{ steps.vars.outputs.release_tag }} | grep "Error code 404" || (echo "La release ${{ steps.vars.outputs.release_tag }} existe deja." ; exit 1)
        echo "La release ${{ steps.vars.outputs.release_tag }} n'existe pas encore. Poursuite du traitement."  
  
  test:
    needs: verify
    strategy:
      fail-fast: false
      matrix:
        os-version: ['ubuntu-20.04','windows-latest','macos-latest']
        python-version: [ '3.9' ]
        include:
          - os-version: 'ubuntu-20.04'
            python-version: '3.6'
          - os-version: 'ubuntu-20.04'
            python-version: '3.7'
          - os-version: 'ubuntu-20.04'
            python-version: '3.8'         
          - os-version: 'ubuntu-20.04'
            python-version: '3.10'              
    runs-on: ${{ matrix.os-version }}
    name: test package on ${{ matrix.os-version }} with ${{ matrix.python-version }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64                            
      - name: update pip
        run: |
          python -m pip install --upgrade pip       
      - name: install pyvitemadose
        run: |
          pip install .
      - name: Launch minimal test
        run: pyvitemadose 44  


  push_to_pypi:
    needs: test
    name: push package on pypi
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'    
      - name: update pip
        run: |
          python3 -m pip install --upgrade pip        
      - name: install pep517
        run: |
          pip install pep517
      - name: build
        run: python3 -m pep517.build --source --binary --out-dir dist/ .
      - name: publish to pypi
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.PYPI_USER }}
          password: ${{ secrets.PYPI_PASSWORD }}                  

  
  autoex:
    needs:
      - verify
      - push_to_pypi
    strategy:
      fail-fast: false
      matrix:
        os-version: ['ubuntu-20.04','windows-latest','macos-latest']
        python-version: [ '3.9' ]    
    runs-on: ${{ matrix.os-version }}
    name: create auotoex on ${{ matrix.os-version }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'    
      - name: update pip
        run: |
          python3 -m pip install --upgrade pip
      - name: install pyvitemadose
        run: |
          pip install .                 
      - name: executable format
        run: | 
          pip install pyinstaller
          pyinstaller --name pyvitemadose --exclude-module pyvitemadose.update --clean --onefile pyvitemadose/__init__.py



      - name: artifact for macos
        uses: svenstaro/upload-release-action@v2
        if: ${{ matrix.os-version == 'macos-latest' }} 
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: pyvitemadose_mac_${{ needs.verify.outputs.version }}.app
          file: /Users/runner/work/pyvitemadose/pyvitemadose/dist/pyvitemadose
          tag: ${{ github.ref }}
          overwrite: true      
      - name: artifact for ubuntu
        uses: svenstaro/upload-release-action@v2
        if: ${{ matrix.os-version == 'ubuntu-20.04' }} 
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: pyvitemadose_linux_${{ needs.verify.outputs.version }}
          file: /home/runner/work/pyvitemadose/pyvitemadose/dist/pyvitemadose
          tag: ${{ github.ref }}
          overwrite: true                    
      - name: artifact for windows
        uses: svenstaro/upload-release-action@v2
        if: ${{ matrix.os-version == 'windows-latest' }} 
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: pyvitemadose_win_${{ needs.verify.outputs.version }}.exe
          file: D:\a\pyvitemadose\pyvitemadose\dist\pyvitemadose.exe
          tag: ${{ github.ref }}
          overwrite: true                  
      
  tweet:
    needs:
      - verify
      - autoex
    name: tweet
    runs-on: ubuntu-20.04    
    steps:
      - name: checkout
        uses: actions/checkout@v2 
      - name : tweet
        env: 
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          VERSION: ${{ needs.verify.outputs.version }}
        run: pip install twython && python .github/publish_tweet.py             

